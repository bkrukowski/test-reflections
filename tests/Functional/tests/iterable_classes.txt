<?php

/**
 * Generated by php-header-file/php-header-file
 * @url https://github.com/php-header-file/php-header-file
 */

namespace
{
    throw new \RuntimeException('File generated by php-header-file, only for IDE purposes, do not execute this file');
}

namespace PhpHeaderFile\Fixtures
{
    interface IterableInterface
    {
        public function getIterable(): iterable;
    }
}

namespace PhpHeaderFile\Fixtures\Iterables
{
    trait CountableIterable
    {
        public function count() {}
    }

    final class IterableArray extends \PhpHeaderFile\Fixtures\Iterables\IterableClass implements \Countable, \IteratorAggregate, \PhpHeaderFile\Fixtures\Stringable\StringableInterface
    {
        /* use \PhpHeaderFile\Fixtures\Iterables\CountableIterable; */
        /* use \PhpHeaderFile\Fixtures\Exportable\ExportableTrait; */

        public function __toString() {return '';}
        public function count() {}
        public function export() {}
        public function getIterable(): iterable {}
        public function getIterator() {}
    }

    abstract class IterableClass implements \PhpHeaderFile\Fixtures\IterableInterface
    {
    }
}

namespace PhpHeaderFile\Fixtures\Stringable
{
    interface StringableInterface
    {
        public function __toString();
    }
}
